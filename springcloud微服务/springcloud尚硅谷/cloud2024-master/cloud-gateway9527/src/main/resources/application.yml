server:
  port: 9527

spring:
  application:
    name: cloud-gateway # ⭐ 微服务名称 - 用于注册到服务发现系统(consul/nacos)
  cloud:
    consul: # ===== Consul配置区 =====
      host: localhost
      port: 8500
      discovery: # ⭐ 服务发现配置 - 控制服务如何注册到Consul
        prefer-ip-address: true # 优先使用IP地址而非主机名
        service-name: ${spring.application.name}
    gateway: # ===== 网关核心配置区 =====
      routes: # ⭐ 路由配置列表 - 定义请求如何转发到各个微服务
        # 💡 路由1配置 - 支付服务路由配置1
        - id: pay_routh1 # ⭐ 路由唯一标识符「类似数据库主键」
#          uri: http://localhost:8001                # 直连方式(已注释)
          uri: lb://cloud-payment-service            # ⭐ 负载均衡方式「lb://服务名」- 通过服务发现动态路由
          predicates: # ⭐ 断言配置 - 决定请求是否匹配该路由
            - Path=/pay/gateway/get/**               # ⭐ 路径匹配断言 - 匹配指定URL路径格式
            - After=2023-12-30T23:02:39.079979400+08:00[Asia/Shanghai] # ⭐ 时间断言 - 仅在指定时间后生效
            #- Cookie=username,zzyy                  # ⭐ Cookie断言 - 要求Cookie中包含指定键值对
            #- Header=X-Request-Id, \d+              # ⭐ 请求头断言 - 要求Header满足正则表达式
            #- Host=**.atguigu.com                   # ⭐ 主机名断言 - 限制访问域名
            #- Query=username, \d+                   # ⭐ 查询参数断言 - 要求参数满足正则表达式
            #- RemoteAddr=192.168.124.1/24           # ⭐ IP地址断言 - 限制客户端IP范围「CIDR格式」
            #- My=gold                               # ⭐ 自定义断言示例「简单方式，但缺少实现」
#            - name: My # ⭐ 自定义断言「完整方式」- 需要对应的断言工厂实现
#              args:
#                userType: diamond

        # 💡 路由2配置 - 支付服务路由配置2
        - id: pay_routh2
          #uri: http://localhost:8001                # 直连方式(已注释)
          uri: lb://cloud-payment-service            # ⭐ 负载均衡方式 - 通过服务名动态发现服务实例
          predicates:
            - Path=/pay/gateway/info/**              # ⭐ 路径匹配断言 - 匹配info接口路径

        # 💡 路由3配置 - 支付服务路由配置3(带过滤器示例)
        - id: pay_routh3
          uri: lb://cloud-payment-service
          predicates: 
            - Path=/pay/gateway/filter/**            # ⭐ 当前使用的路径匹配规则 - 匹配filter接口路径
            #- Path=/gateway/filter/**               # ⭐ 配合PrefixPath过滤器的测试路径(已注释)
            #- Path=/XYZ/abc/{segment}               # ⭐ 配合SetPath过滤器的测试路径(已注释)
          filters: # ===== 过滤器配置 ===== 
            # ❗ 注意：请求先经过断言(predicates)匹配，再经过过滤器(filters)处理
            - My=atguigu                             # ⭐ 自定义过滤器示例 - 需要对应的过滤器工厂实现
            
            # ----- 重定向过滤器(已注释) -----
            #- RedirectTo=302, http://www.atguigu.com/ # ⭐ 重定向过滤器 - 将请求重定向到外部URL
            
            # ----- 路径操作过滤器(已注释) -----
            #- SetPath=/pay/gateway/{segment}        # ⭐ 路径重写过滤器 - 使用占位符动态替换路径
            #- PrefixPath=/pay                       # ⭐ 前缀添加过滤器 - 允许客户端使用简化路径
            
            # ----- 请求头操作过滤器 -----
            - AddRequestHeader=X-Request-atguigu1,atguiguValue1  # ⭐ 添加请求头过滤器 - 增加自定义请求头
            #- AddRequestHeader=X-Request-atguigu2,atguiguValue2  # ⭐ 多个请求头需分行设置
            #- RemoveRequestHeader=sec-fetch-site    # ⭐ 删除请求头过滤器 - 移除指定请求头
            #- SetRequestHeader=sec-fetch-mode, Blue-updatebyzzyy # ⭐ 修改请求头过滤器 - 覆盖已有请求头
            
            # ----- 请求参数操作过滤器(已注释) -----
            #- AddRequestParameter=customerId,9527001 # ⭐ 添加请求参数过滤器 - 已有则不覆盖
            #- RemoveRequestParameter=customerName   # ⭐ 删除请求参数过滤器 - 移除指定参数
            
            # ----- 响应头操作过滤器(已注释) -----
            #- AddResponseHeader=X-Response-atguigu, BlueResponse # ⭐ 添加响应头过滤器 - 增加自定义响应头
            #- SetResponseHeader=Date,2099-11-11     # ⭐ 设置响应头过滤器 - 覆盖已有响应头
            #- RemoveResponseHeader=Content-Type     # ⭐ 删除响应头过滤器 - 移除指定响应头