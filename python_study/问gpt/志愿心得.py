# -*- coding: utf-8 -*-
import os
import llmapi免费的可搞图片
import json
import ast
import re
当前工作目录 = os.path.dirname(os.path.abspath(__file__))
from docx import Document
from docx import Document
from docx.enum.text import WD_PARAGRAPH_ALIGNMENT
from docx.shared import Pt, Inches
from docx.oxml.ns import qn
import time
def 读取志愿图片中的所有图片路劲():
    图片目录 = os.path.join(当前工作目录, '志愿图片')
    所有图片路径 = []
    for 文件 in os.listdir(图片目录):
        if 文件.endswith('.png') or 文件.endswith('.jpg'):
            图片路径 = os.path.join(图片目录, 文件)
            所有图片路径.append(图片路径)
    return 所有图片路径
def 提取模板结构(文件路径):
    doc = Document(文件路径)
    结构 = []
    for 段落 in doc.paragraphs:
        if 段落.text.strip():  # 忽略空段落
            结构.append({
                '内容': 段落.text,
                '样式': 段落.style.name,
                '字体': 段落.runs[0].font.name if 段落.runs else None,
                '大小': 段落.runs[0].font.size.pt if 段落.runs and 段落.runs[0].font.size else None,
                '加粗': 段落.runs[0].font.bold if 段落.runs else None,
                '斜体': 段落.runs[0].font.italic if 段落.runs else None,
                '对齐': 段落.alignment.name if 段落.alignment else None,
                '行间距': 段落.paragraph_format.line_spacing if 段落.paragraph_format else None,
                '段前间距': 段落.paragraph_format.space_before if 段落.paragraph_format else None,
                '段后间距': 段落.paragraph_format.space_after if 段落.paragraph_format else None,
                '首行缩进': 段落.paragraph_format.first_line_indent if 段落.paragraph_format else None
            })
    return 结构
def 字符串转回列表(字符串):
    try:
        return ast.literal_eval(字符串)
    except (ValueError, SyntaxError):
        print("无法将字符串转换为列表")
        return None
def 安全文件名(文件名):
    # 移除或替换不安全的字符
    安全名 = re.sub(r'[<>:"/\\|?*]', '', 文件名)
    # 确保文件名不为空，如果为空则使用默认名称
    return 安全名 if 安全名 else '志愿心得'
def 根据模板结构生成doc文档(结构, 文件名='志愿心得.docx'):
    文档 = Document()
    
    # 设置默认字体
    文档.styles['Normal'].font.name = '仿宋'
    文档.styles['Normal']._element.rPr.rFonts.set(qn('w:eastAsia'), '仿宋')
    
    for 段落 in 结构:
        新段落 = 文档.add_paragraph()
        运行 = 新段落.add_run(段落['内容'])
        
        # 设置段落样式
        if 段落.get('样式'):
            新段落.style = 段落['样式']
        
        # 设置字体
        if 段落.get('字体'):
            运行.font.name = 段落['字体']
            运行._element.rPr.rFonts.set(qn('w:eastAsia'), 段落['字体'])
        
        # 设置字体大小
        if 段落.get('大小'):
            运行.font.size = Pt(float(段落['大小']))
        
        # 设置加粗
        if 段落.get('加粗') is not None:
            运行.font.bold = 段落['加粗']
        
        # 设置斜体
        if 段落.get('斜体') is not None:
            运行.font.italic = 段落['斜体']
        
        # 设置对齐方式
        if 段落.get('对齐'):
            if 段落['对齐'] == 'CENTER':
                新段落.alignment = WD_PARAGRAPH_ALIGNMENT.CENTER
            elif 段落['对齐'] == 'LEFT':
                新段落.alignment = WD_PARAGRAPH_ALIGNMENT.LEFT
            elif 段落['对齐'] == 'RIGHT':
                新段落.alignment = WD_PARAGRAPH_ALIGNMENT.RIGHT
        
        # 设置行间距
        if 段落.get('行间距'):
            新段落.paragraph_format.line_spacing = float(段落['行间距']) / 240000  # 转换为行数
        
        # 设置段落间距
        if 段落.get('段前间距'):
            新段落.paragraph_format.space_before = Pt(float(段落['段前间距']) / 20)  # 转换为磅
        if 段落.get('段后间距'):
            新段落.paragraph_format.space_after = Pt(float(段落['段后间距']) / 20)  # 转换为磅
        
        # 设置首行缩进
        if 段落.get('首行缩进'):
            新段落.paragraph_format.first_line_indent = Inches(float(段落['首行缩进']) / 914400)  # 将 EMU 转换为英寸

    # 获取当前工作目录
    当前工作目录 = os.path.dirname(os.path.abspath(__file__))
    
    # 指定保存文件夹
    保存文件夹 = os.path.join(当前工作目录, '生成的志愿心得.doc')
    
    # 确保保存文件夹存在
    os.makedirs(保存文件夹, exist_ok=True)
    
    # 处理文件名
    安全的文件名 = 安全文件名(文件名)
    
    # 构建完整的文件保存路径
    保存路径 = os.path.join(保存文件夹, 安全的文件名)
    
    # 保存文档
    文档.save(保存路径)
    print(f"文档已保存为 {保存路径}")
def 测试调用图片ai的api():
    图片路径 = 读取志愿图片中的所有图片路劲()[0]
    res=llmapi免费的可搞图片.问gpt图片问题(问题="这张图片里有什么?", 图片路径=图片路径)
    print(res)
def 测试读取志愿心得内一个doc文档():
    文档目录 = os.path.join(当前工作目录, '志愿心得')
    for 文件 in os.listdir(文档目录):
        if 文件.endswith('.docx'):
            文档路径 = os.path.join(文档目录, 文件)
            print(文档路径)
            break
    doc = Document(文档路径)
    for i, 段落 in enumerate(doc.paragraphs):
        print(f"段落 {i + 1}:")
        print(f"文本内容: {段落.text}")
        
        # 获取段落样式
        样式 = 段落.style
        print(f"段落样式名称: {样式.name}")
        
        # 获取字体信息
        字体 = 段落.runs[0].font if 段落.runs else None
        if 字体:
            print(f"字体名称: {字体.name}")
            print(f"字体大小: {字体.size.pt if 字体.size else '未指定'} 磅")
            print(f"是否加粗: {'是' if 字体.bold else '否'}")
            print(f"是否斜体: {'是' if 字体.italic else '否'}")
            print(f"字体颜色: {字体.color.rgb if 字体.color else '未指定'}")
        
        print("\n")
def 测试提取模板结构():
    文件路径 = os.path.join(当前工作目录, '志愿心得')
    # 找一个doc文件
    for 文件 in os.listdir(文件路径):
        if 文件.endswith('.docx'):
            文件路径 = os.path.join(文件路径, 文件)
            break
    print("正在提取模板结构:", 文件路径)
    结构 = 提取模板结构(文件路径)
    print(结构)
    return 结构
def gpt返回样式():
    res='''
[
    {'内容': '桥北社区开展"反对浪费 崇尚节约"宣讲教育活动志愿服务心得', '样式': 'Normal', '字体': '仿宋', '大小': 18.0, '加粗': True, '斜体': None, '对齐': 'CENTER', '行间距': None, '段前间距': None, '段后间距': None, '首行缩进': None},
    {'内容': '班级：计算机科学与软件学院', '样式': 'Normal', '字体': '仿宋', '大小': 16.0, '加粗': None, '斜体': None, '对齐': None, '行间距': 317500, '段前间距': None, '段后间距': None, '首行缩进': 406400},
    {'内容': '学号：202124113225', '样式': 'Normal', '字体': '仿宋', '大小': 16.0, '加粗': None, '斜体': None, '对齐': None, '行间距': 317500, '段前间距': None, '段后间距': None, '首行缩进': 406400},
    {'内容': '姓名：双依伦', '样式': 'Normal', '字体': '仿宋', '大小': 16.0, '加粗': None, '斜体': None, '对齐': None, '行间距': 317500, '段前间距': None, '段后间距': None, '首行缩进': 406400},
    {'内容': '在温暖的三月，我有幸参与了桥北社区组织的"反对浪费 崇尚节约"宣讲教育活动。这次活动于2024年3月19日举行，虽然只有短短三小时，但给我带来的收获和感悟却是深远而持久的。', '样式': 'Normal', '字体': '仿宋', '大小': 16.0, '加粗': None, '斜体': None, '对齐': None, '行间距': 317500, '段前间距': None, '段后间距': None, '首行缩进': 406400},
    {'内容': '活动当天，阳光明媚，春意盎然。我们一行人早早地来到了广东省肇庆市端州区桥北街道桥北社区，为即将开始的宣讲活动做着精心的准备。作为志愿者，我深知自己的责任重大，不仅要准确传达反对浪费和崇尚节约的理念，更要引导社区居民深入理解和践行这些原则。', '样式': 'Normal', '字体': '仿宋', '大小': 16.0, '加粗': None, '斜体': None, '对齐': None, '行间距': 317500, '段前间距': None, '段后间距': None, '首行缩进': 406400},
    {'内容': '宣讲过程中，我紧紧围绕"反对浪费 崇尚节约"这一主题，用通俗易懂的语言，结合生动的案例，向社区居民们详细解读了节约资源的 重要性。我强调了节约的意义，指出只有深入理解，才能明确节约的必要性，才能更好地践行节约，做到心中有责、肩上有担。同时，我也鼓励大家要勇于担当，积极履行社会责任，为社区的发展贡献自己的力量。', '样式': 'Normal', '字体': '仿宋', '大小': 16.0, '加粗': None, '斜体': None, '对齐': None, '行间距': 317500, '段前间距': None, '段后间距': None, '首行缩进': 406400},
    {'内容': '在与居民们的互动交流中，我发现他们对于反对浪费和崇尚节约有着强烈的认同感和归属感。他们纷纷表示，通过这次宣讲活动，不仅加深了对节约理念的认识和理解，也更加坚定了自己践行节约的决心。这种积极的反馈让我深感欣慰和自豪，也让我更加坚信志愿服务的价值和意义。', '样式': 'Normal', '字体': '仿宋', '大小': 16.0, '加粗': None, '斜体': None, '对齐': None, '行间距': 317500, '段前间距': None, '段后间距': None, '首行缩进': 406400},
    {'内容': '除了宣讲内容本身，我还深刻体会到了团队合作的重要性。在准备和进行宣讲的过程中，我们团队成员之间相互支持、相互配合，共同克服了各种困难和挑战。正是有了大家的共同努力和付出，才使得这次宣讲活动得以顺利进行并取得了圆满成功。', '样式': 'Normal', '字体': '仿宋', '大小': 16.0, '加粗': None, '斜体': None, '对齐': None, '行间距': 317500, '段前间距':None, '字体': '仿宋', '大小': 16.0, '加粗': None, '斜体': None, '对齐': None, '行间距': 317500, '段前间距': None, '段后间距': None, '首行缩进': 406400},
    {'内容': '回顾这次志愿活动，我深感收获颇丰。不仅提升了自己的沟通能力和组织能力，更重要的是加深了对节约理念的认识和理解。同时，我也感受到了社区居民们的热情和期待，这让我更加坚定了继续投身志愿服务事业的决心。', '样式': 'Normal', '字体': '仿宋', '大小': 16.0, '加粗': None, '斜体': None, '对齐': None, '行间距': 317500, '段前间距': None, '段后间距': None, '首行缩进': 406400},
    {'内容': '展望未来，我将继续秉持"奉献、友爱、互助、进步"的志愿精神，积极参与各类志愿服务活动。我相信，只要我们每个人都能够尽自己的一份力量去帮助他人、服务社会，就一定能够汇聚起强大的正能量，推动社会的和谐与进步。我也希望更多的人能够加入到志愿服务的行列中来，共同为构建美好的社会环境贡献自己的力量。', '样式': 'Normal', '字体': '仿宋', '大小': 16.0, '加粗': None, '斜体': None, '对齐': None, '行间距': 317500, '段前间距': None, '段后间距': None, '首行缩进': 406400}    
]
'''
    return res
def gpt完整返回():
    res='''[
    {'内容': '桥北社区开展"反对浪费 崇尚节约"宣讲教育活动志愿服务心得', '样式': 'Normal', '字体': '仿宋', '大小': 18.0, '加粗': True, '斜体': None, '对齐': 'CENTER', '行间距': None, '段前间距': None, '段后间距': None, '首行缩进': None},
    {'内容': '班级：计算机科学与软件学院', '样式': 'Normal', '字体': '仿宋', '大小': 16.0, '加粗': None, '斜体': None, '对齐': None, '行间距': 317500, '段前间距': None, '段后间距': None, '首行缩进': 406400},
    {'内容': '学号：202124113225', '样式': 'Normal', '字体': '仿宋', '大小': 16.0, '加粗': None, '斜体': None, '对齐': None, '行间距': 317500, '段前间距': None, '段后间距': None, '首行缩进': 406400},
    {'内容': '姓名：双依伦', '样式': 'Normal', '字体': '仿宋', '大小': 16.0, '加粗': None, '斜体': None, '对齐': None, '行间距': 317500, '段前间距': None, '段后间距': None, '首行缩进': 406400},
    {'内容': '在温暖的三月，我有幸参与了桥北社区组织的"反对浪费 崇尚节约"宣讲教育活动。这次活动于2024年3月19日举行，虽然只有短短三小时，但给我带来的收获和感悟却是深远而持久的。', '样式': 'Normal', '字体': '仿宋', '大小': 16.0, '加粗': None, '斜体': None, '对齐': None, '行间距': 317500, '段前间距': None, '段后间距': None, '首行缩进': 406400},
    {'内容': '活动当天，阳光明媚，春意盎然。我们一行人早早地来到了广东省肇庆市端州区桥北街道桥北社区，为即将开始的宣讲活动做着精心的准备。作为志愿者，我深知自己的责任重大，不仅要准确传达反对浪费和崇尚节约的理念，更要引导社区居民深入理解和践行这些原则。', '样式': 'Normal', '字体': '仿宋', '大小': 16.0, '加粗': None, '斜体': None, '对齐': None, '行间距': 317500, '段前间距': None, '段后间距': None, '首行缩进': 406400},
    {'内容': '宣讲过程中，我紧紧围绕"反对浪费 崇尚节约"这一主题，用通俗易懂的语言，结合生动的案例，向社区居民们详细解读了节约资源的 重要性。我强调了节约的意义，指出只有深入理解，才能明确节约的必要性，才能更好地践行节约，做到心中有责、肩上有担。同时，我也鼓励大家要勇于担当，积极履行社会责任，为社区的发展贡献自己的力量。', '样式': 'Normal', '字体': '仿宋', '大小': 16.0, '加粗': None, '斜体': None, '对齐': None, '行间距': 317500, '段前间距': None, '段后间距': None, '首行缩进': 406400},
    {'内容': '在与居民们的互动交流中，我发现他们对于反对浪费和崇尚节约有着强烈的认同感和归属感。他们纷纷表示，通过这次宣讲活动，不仅加深了对节约理念的认识和理解，也更加坚定了自己践行节约的决心。这种积极的反馈让我深感欣慰和自豪，也让我更加坚信志愿服务的价值和意义。', '样式': 'Normal', '字体': '仿宋', '大小': 16.0, '加粗': None, '斜体': None, '对齐': None, '行间距': 317500, '段前间距': None, '段后间距': None, '首行缩进': 406400},
    {'内容': '除了宣讲内容本身，我还深刻体会到了团队合作的重要性。在准备和进行宣讲的过程中，我们团队成员之间相互支持、相互配合，共同克服了各种困难和挑战。正是有了大家的共同努力和付出，才使得这次宣讲活动得以顺利进行并取得了圆满成功。', '样式': 'Normal', '字体': '仿宋', '大小': 16.0, '加粗': None, '斜体': None, '对齐': None, '行间距': 317500, '段前间距':None, '字体': '仿宋', '大小': 16.0, '加粗': None, '斜体': None, '对齐': None, '行间距': 317500, '段前间距': None, '段后间距': None, '首行缩进': 406400},
    {'内容': '回顾这次志愿活动，我深感收获颇丰。不仅提升了自己的沟通能力和组织能力，更重要的是加深了对节约理念的认识和理解。同时，我也感受到了社区居民们的热情和期待，这让我更加坚定了继续投身志愿服务事业的决心。', '样式': 'Normal', '字体': '仿宋', '大小': 16.0, '加粗': None, '斜体': None, '对齐': None, '行间距': 317500, '段前间距': None, '段后间距': None, '首行缩进': 406400},
    {'内容': '展望未来，我将继续秉持"奉献、友爱、互助、进步"的志愿精神，积极参与各类志愿服务活动。我相信，只要我们每个人都能够尽自己的一份力量去帮助他人、服务社会，就一定能够汇聚起强大的正能量，推动社会的和谐与进步。我也希望更多的人能够加入到志愿服务的行列中来，共同为构建美好的社会环境贡献自己的力量。', '样式': 'Normal', '字体': '仿宋', '大小': 16.0, '加粗': None, '斜体': None, '对齐': None, '行间距': 317500, '段前间距': None, '段后间距': None, '首行缩进': 406400}    
]'''
    return res
def 测试1():
    结构=测试提取模板结构()
    根据模板结构生成doc文档(结构)
def 测试2():
    结构 = 测试提取模板结构()
    图片路径 = os.path.join(当前工作目录, '志愿图片')
    for 文件 in os.listdir(图片路径):
        if 文件.endswith('.png') or 文件.endswith('.jpg'):
            图片路径 = os.path.join(图片路径, 文件)
            break
    print("正在生成志愿心得:", 图片路径)
    问题=f'''参考这个模板结构, 帮我写一篇志愿心得，里边的时间，活动，地点等等要和图片中的对应，返回给我数据，
    这是参考的模板结构：{gpt返回样式()},
    这是模板结构+{str(结构)}。
    注意：你只需要返回给我新的志愿心得结构，列表数据，不要给我返回其他的！！ 只返回给我像我提供的那个那样的数据！
    这是你最终返回给我的东西：{gpt完整返回()} 不要加上```json和```
'''
    res = llmapi免费的可搞图片.问gpt图片问题(问题=问题, 图片路径=图片路径)
    print("gpt返回的res:", res)
    try:
        数据 = 字符串转回列表(res)
        if 数据:
            文件名 = 安全文件名(数据[0]['内容'] + '.docx')  # 使用安全文件名函数
            # 处理可能的大整数
            for item in 数据:
                for key, value in item.items():
                    if isinstance(value, (int, float)) and abs(value) > 2147483647:
                        item[key] = float(value)
            结构 = 数据  # 整个列表作为结构
            根据模板结构生成doc文档(结构, 文件名=文件名)
        else:
            print("API 返回的数据无法转换为列表")
    except Exception as e:
        print(f"生成文档时出错: {str(e)}")
def 测试3():
    结构 = 测试提取模板结构()
    图片文件夹 = os.path.join(当前工作目录, '志愿图片')
    
    for 文件 in os.listdir(图片文件夹):
        if 文件.endswith('.png') or 文件.endswith('.jpg'):
            print("正在处理图片:", 文件)
            图片路径 = os.path.join(图片文件夹, 文件)
            问题 = f'''参考这个模板结构, 帮我写一篇志愿心得，里边的时间，活动，地点等等要和图片中的对应，返回给我数据，
            这是参考的模板结构：{gpt返回样式()},
            这是模板结构+{str(结构)}。
            注意：你只需要返回给我新的志愿心得结构，列表数据，不要给我返回其他的！！ 只返回给我像我提供的那个那样的数据！
            这是你最终返回给我的东西：{gpt完整返回()} 不要加上```json和```
'''
            res = llmapi免费的可搞图片.问gpt图片问题(问题=问题, 图片路径=图片路径)
            print(f"GPT返回的结果: {res}")
            
            try:
                数据 = 字符串转回列表(res)
                if 数据:
                    文件名 = 安全文件名(数据[0]['内容'] + '.docx')
                    for item in 数据:
                        for key, value in item.items():
                            if isinstance(value, (int, float)) and abs(value) > 2147483647:
                                item[key] = float(value)
                    结构 = 数据
                    根据模板结构生成doc文档(结构, 文件名=文件名)
                    print(f"成功生成文档: {文件名}")
                else:
                    print(f"API 返回的数据无法转换为列表，跳过图片: {文件}")
            except Exception as e:
                print(f"处理图片 {文件} 时出错: {str(e)}")
            time.sleep(5)

自定义res='''[
    {'内容': '大冲社区开展“学条例、明纪律、守底线、促担当”党纪学习教育专题宣讲志愿服务活动心得', '样式': 'Normal', '字体': '仿宋', '大小': 18.0, '加粗': True, '斜体': None, '对齐': 'CENTER', '行间距': None, '段前间距': None, '段后间距': None, '首行缩进': None},
    {'内容': '班级：21软件工程2班', '样式': 'Normal', '字体': '仿宋', '大小': 16.0, '加粗': None, '斜体': None, '对齐': None, '行间距': 317500, '段前间距': None, '段后间距': None, '首行缩进': 406400},
    {'内容': '学号：202124113225', '样式': 'Normal', '字体': '仿宋', '大小': 16.0, '加粗': None, '斜体': None, '对齐': None, '行间距': 317500, '段前间距': None, '段后间距': None, '首行缩进': 406400},
    {'内容': '姓名：邓依伦', '样式': 'Normal', '字体': '仿宋', '大小': 16.0, '加粗': None, '斜体': None, '对齐': None, '行间距': 317500, '段前间距': None, '段后间距': None, '首行缩进': 406400},
    {'内容': '在炎炎夏日的七月，我有幸参与了大冲社区组织的“学条例、明纪律、守底线、促担当”党纪学习教育专题宣讲志愿服务活动。这次活动于2024年7月5日举行，虽然只有短短三小时，但给我带来的收获和感悟却是深远而持久的。', '样式': 'Normal', '字体': '仿宋', '大小': 16.0, '加粗': None, '斜体': None, '对齐': None, '行间距': 317500, '段前间距': None, '段后间距': None, '首行缩进': 406400},
    {'内容': '活动当天，阳光明媚，热情如火。我们一行人早早地来到了广东省肇庆市端州区大冲社区居委会，为即将开始的宣讲活动做着精心的准备。作为志愿者，我深知自己的责任重大，不仅要准确传达党的纪律和规矩，更要引导社区居民深入理解和践行这些原则。', '样式': 'Normal', '字体': '仿宋', '大小': 16.0, '加粗': None, '斜体': None, '对齐': None, '行间距': 317500, '段前间距': None, '段后间距': None, '首行缩进': 406400},
    {'内容': '宣讲过程中，我紧紧围绕“学条例、明纪律、守底线、促担当”这一主题，用通俗易懂的语言，结合生动的案例，向社区居民们详细解读了党的各项纪律和规矩。我强调了学习条例的重要性，指出只有深入学习，才能明确纪律要求，才能更好地遵守底线，做到心中有责、肩上有担。同时，我也鼓励大家要勇于担当，积极履行社会责任，为社区的发展贡献自己的力量。', '样式': 'Normal', '字体': '仿宋', '大小': 16.0, '加粗': None, '斜体': None, '对齐': None, '行间距': 317500, '段前间距': None, '段后间距': None, '首行缩进': 406400},
    {'内容': '在与居民们的互动交流中，我发现他们对于党的纪律和规矩有着强烈的认同感和归属感。他们纷纷表示，通过这次宣讲活动，不仅加深了对党的认识和理解，也更加坚定了自己遵守纪律、坚守底线的决心。这种积极的反馈让我深感欣慰和自豪，也让我更加坚信志愿服务的价值和意义。', '样式': 'Normal', '字体': '仿宋', '大小': 16.0, '加粗': None, '斜体': None, '对齐': None, '行间距': 317500, '段前间距': None, '段后间距': None, '首行缩进': 406400},
    {'内容': '除了宣讲内容本身，我还深刻体会到了团队合作的重要性。在准备和进行宣讲的过程中，我们团队成员之间相互支持、相互配合，共同克服了各种困难和挑战。正是有了大家的共同努力和付出，才使得这次宣讲活动得以顺利进行并取得了圆满成功。', '样式': 'Normal', '字体': '仿宋', '大小': 16.0, '加粗': None, '斜体': None, '对齐': None, '行间距': 317500, '段前间距': None, '段后间距': None, '首行缩进': 406400},
    {'内容': '回顾这次志愿活动，我深感收获颇丰。不仅提升了自己的沟通能力和组织能力，更重要的是加深了对党的纪律和规矩的认识和理解。同时，我也感受到了社区居民们的热情和期待，这让我更加坚定了继续投身志愿服务事业的决心。', '样式': 'Normal', '字体': '仿宋', '大小': 16.0, '加粗': None, '斜体': None, '对齐': None, '行间距': 317500, '段前间距': None, '段后间距': None, '首行缩进': 406400},
    {'内容': '展望未来，我将继续秉持“奉献、友爱、互助、进步”的志愿精神，积极参与各类志愿服务活动。我相信，只要我们每个人都能够尽自己的一份力量去帮助他人、服务社会，就一定能够汇聚起强大的正能量，推动社会的和谐与进步。我也希望更多的人能够加入到志愿服务的行列中来，共同为构建美好的社会环境贡献自己的力量。', '样式': 'Normal', '字体': '仿宋', '大小': 16.0, '加粗': None, '斜体': None, '对齐': None, '行间距': 317500, '段前间距': None, '段后间距': None, '首行缩进': 406400}
]'''
def 自定义转化():
    结构 = 测试提取模板结构()
    图片路径 = os.path.join(当前工作目录, '志愿图片')
    for 文件 in os.listdir(图片路径):
        if 文件.endswith('.png') or 文件.endswith('.jpg'):
            图片路径 = os.path.join(图片路径, 文件)
            break
    print("正在生成志愿心得:", 图片路径)
    问题=f'''参考这个模板结构, 帮我写一篇志愿心得，里边的时间，活动，地点等等要和图片中的对应，返回给我数据，
    这是参考的模板结构：{gpt返回样式()},
    这是模板结构+{str(结构)}。
    注意：你只需要返回给我新的志愿心得结构，列表数据，不要给我返回其他的！！ 只返回给我像我提供的那个那样的数据！
    这是你最终返回给我的东西：{gpt完整返回()} 不要加上```json和```
'''
    res = 自定义res
    print("gpt返回的res:", res)
    try:
        数据 = 字符串转回列表(res)
        if 数据:
            文件名 = 安全文件名(数据[0]['内容'] + '.docx')  # 使用安全文件名函数
            # 处理可能的大整数
            for item in 数据:
                for key, value in item.items():
                    if isinstance(value, (int, float)) and abs(value) > 2147483647:
                        item[key] = float(value)
            结构 = 数据  # 整个列表作为结构
            根据模板结构生成doc文档(结构, 文件名=文件名)
        else:
            print("API 返回的数据无法转换为列表")
    except Exception as e:
        print(f"生成文档时出错: {str(e)}")



if __name__ == "__main__":
    # 测试调用图片ai的api()
    # 测试读取志愿心得内一个doc文档()
    测试提取模板结构()
    # 测试1()
    # 测试3()
    # 自定义转化()
    # 测试2()
